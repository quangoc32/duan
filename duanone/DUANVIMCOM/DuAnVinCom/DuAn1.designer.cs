#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DuAnVinCom
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DEMO5")]
	public partial class DuAn1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBaoHiem(BaoHiem instance);
    partial void UpdateBaoHiem(BaoHiem instance);
    partial void DeleteBaoHiem(BaoHiem instance);
    partial void InsertChucVu(ChucVu instance);
    partial void UpdateChucVu(ChucVu instance);
    partial void DeleteChucVu(ChucVu instance);
    partial void InsertDiem(Diem instance);
    partial void UpdateDiem(Diem instance);
    partial void DeleteDiem(Diem instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertHocKy(HocKy instance);
    partial void UpdateHocKy(HocKy instance);
    partial void DeleteHocKy(HocKy instance);
    partial void InsertHocPhi(HocPhi instance);
    partial void UpdateHocPhi(HocPhi instance);
    partial void DeleteHocPhi(HocPhi instance);
    partial void InsertKhoiLop(KhoiLop instance);
    partial void UpdateKhoiLop(KhoiLop instance);
    partial void DeleteKhoiLop(KhoiLop instance);
    partial void InsertLopHoc(LopHoc instance);
    partial void UpdateLopHoc(LopHoc instance);
    partial void DeleteLopHoc(LopHoc instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertNamHoc(NamHoc instance);
    partial void UpdateNamHoc(NamHoc instance);
    partial void DeleteNamHoc(NamHoc instance);
    partial void InsertPhanCong(PhanCong instance);
    partial void UpdatePhanCong(PhanCong instance);
    partial void DeletePhanCong(PhanCong instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhongHoc(PhongHoc instance);
    partial void UpdatePhongHoc(PhongHoc instance);
    partial void DeletePhongHoc(PhongHoc instance);
    partial void InsertTietHoc(TietHoc instance);
    partial void UpdateTietHoc(TietHoc instance);
    partial void DeleteTietHoc(TietHoc instance);
    partial void InsertHocSinh(HocSinh instance);
    partial void UpdateHocSinh(HocSinh instance);
    partial void DeleteHocSinh(HocSinh instance);
    #endregion
		
		public DuAn1DataContext() : 
				base(global::DuAnVinCom.Properties.Settings.Default.DEMO5ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DuAn1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DuAn1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DuAn1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DuAn1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BaoHiem> BaoHiems
		{
			get
			{
				return this.GetTable<BaoHiem>();
			}
		}
		
		public System.Data.Linq.Table<ChucVu> ChucVus
		{
			get
			{
				return this.GetTable<ChucVu>();
			}
		}
		
		public System.Data.Linq.Table<Diem> Diems
		{
			get
			{
				return this.GetTable<Diem>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<HocKy> HocKies
		{
			get
			{
				return this.GetTable<HocKy>();
			}
		}
		
		public System.Data.Linq.Table<HocPhi> HocPhis
		{
			get
			{
				return this.GetTable<HocPhi>();
			}
		}
		
		public System.Data.Linq.Table<KhoiLop> KhoiLops
		{
			get
			{
				return this.GetTable<KhoiLop>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc> LopHocs
		{
			get
			{
				return this.GetTable<LopHoc>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<NamHoc> NamHocs
		{
			get
			{
				return this.GetTable<NamHoc>();
			}
		}
		
		public System.Data.Linq.Table<PhanCong> PhanCongs
		{
			get
			{
				return this.GetTable<PhanCong>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhongHoc> PhongHocs
		{
			get
			{
				return this.GetTable<PhongHoc>();
			}
		}
		
		public System.Data.Linq.Table<TietHoc> TietHocs
		{
			get
			{
				return this.GetTable<TietHoc>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh> HocSinhs
		{
			get
			{
				return this.GetTable<HocSinh>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaoHiem")]
	public partial class BaoHiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaBaoHiem;
		
		private string _MaHocSinh;
		
		private string _TrangThai;
		
		private string _LoaiBaoHiem;
		
		private System.Nullable<System.DateTime> _NgayApDung;
		
		private string _SoTien;
		
		private EntityRef<HocSinh> _HocSinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBaoHiemChanging(string value);
    partial void OnMaBaoHiemChanged();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnLoaiBaoHiemChanging(string value);
    partial void OnLoaiBaoHiemChanged();
    partial void OnNgayApDungChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayApDungChanged();
    partial void OnSoTienChanging(string value);
    partial void OnSoTienChanged();
    #endregion
		
		public BaoHiem()
		{
			this._HocSinh = default(EntityRef<HocSinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBaoHiem", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBaoHiem
		{
			get
			{
				return this._MaBaoHiem;
			}
			set
			{
				if ((this._MaBaoHiem != value))
				{
					this.OnMaBaoHiemChanging(value);
					this.SendPropertyChanging();
					this._MaBaoHiem = value;
					this.SendPropertyChanged("MaBaoHiem");
					this.OnMaBaoHiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="NVarChar(10)")]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(30)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiBaoHiem", DbType="NVarChar(30)")]
		public string LoaiBaoHiem
		{
			get
			{
				return this._LoaiBaoHiem;
			}
			set
			{
				if ((this._LoaiBaoHiem != value))
				{
					this.OnLoaiBaoHiemChanging(value);
					this.SendPropertyChanging();
					this._LoaiBaoHiem = value;
					this.SendPropertyChanged("LoaiBaoHiem");
					this.OnLoaiBaoHiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayApDung", DbType="Date")]
		public System.Nullable<System.DateTime> NgayApDung
		{
			get
			{
				return this._NgayApDung;
			}
			set
			{
				if ((this._NgayApDung != value))
				{
					this.OnNgayApDungChanging(value);
					this.SendPropertyChanging();
					this._NgayApDung = value;
					this.SendPropertyChanged("NgayApDung");
					this.OnNgayApDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTien", DbType="NVarChar(30)")]
		public string SoTien
		{
			get
			{
				return this._SoTien;
			}
			set
			{
				if ((this._SoTien != value))
				{
					this.OnSoTienChanging(value);
					this.SendPropertyChanging();
					this._SoTien = value;
					this.SendPropertyChanged("SoTien");
					this.OnSoTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_BaoHiem", Storage="_HocSinh", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.BaoHiems.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.BaoHiems.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucVu")]
	public partial class ChucVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaChucVu;
		
		private string _MaGiaoVien;
		
		private string _TenChucVu;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChucVuChanging(string value);
    partial void OnMaChucVuChanged();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    partial void OnTenChucVuChanging(string value);
    partial void OnTenChucVuChanged();
    #endregion
		
		public ChucVu()
		{
			this._GiaoVien = default(EntityRef<GiaoVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChucVu", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaChucVu
		{
			get
			{
				return this._MaChucVu;
			}
			set
			{
				if ((this._MaChucVu != value))
				{
					this.OnMaChucVuChanging(value);
					this.SendPropertyChanging();
					this._MaChucVu = value;
					this.SendPropertyChanged("MaChucVu");
					this.OnMaChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="NVarChar(10)")]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChucVu", DbType="NVarChar(50)")]
		public string TenChucVu
		{
			get
			{
				return this._TenChucVu;
			}
			set
			{
				if ((this._TenChucVu != value))
				{
					this.OnTenChucVuChanging(value);
					this.SendPropertyChanging();
					this._TenChucVu = value;
					this.SendPropertyChanged("TenChucVu");
					this.OnTenChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_ChucVu", Storage="_GiaoVien", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.ChucVus.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.ChucVus.Add(this);
						this._MaGiaoVien = value.MaGiaoVien;
					}
					else
					{
						this._MaGiaoVien = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Diem")]
	public partial class Diem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSo;
		
		private string _MaHocSinh;
		
		private string _MaNH;
		
		private string _MaHK;
		
		private string _MaMon;
		
		private string _KtMieng;
		
		private string _Kt15p;
		
		private string _Kt15pLan2;
		
		private string _Kt15pLan3;
		
		private string _Kt1Tiet;
		
		private string _Kt1TietLan2;
		
		private string _DiemThi;
		
		private string _DiemTrungBinh;
		
		private string _DiemTBMON;
		
		private EntityRef<HocKy> _HocKy;
		
		private EntityRef<MonHoc> _MonHoc;
		
		private EntityRef<NamHoc> _NamHoc;
		
		private EntityRef<HocSinh> _HocSinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoChanging(string value);
    partial void OnMaSoChanged();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnMaNHChanging(string value);
    partial void OnMaNHChanged();
    partial void OnMaHKChanging(string value);
    partial void OnMaHKChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnKtMiengChanging(string value);
    partial void OnKtMiengChanged();
    partial void OnKt15pChanging(string value);
    partial void OnKt15pChanged();
    partial void OnKt15pLan2Changing(string value);
    partial void OnKt15pLan2Changed();
    partial void OnKt15pLan3Changing(string value);
    partial void OnKt15pLan3Changed();
    partial void OnKt1TietChanging(string value);
    partial void OnKt1TietChanged();
    partial void OnKt1TietLan2Changing(string value);
    partial void OnKt1TietLan2Changed();
    partial void OnDiemThiChanging(string value);
    partial void OnDiemThiChanged();
    partial void OnDiemTrungBinhChanging(string value);
    partial void OnDiemTrungBinhChanged();
    partial void OnDiemTBMONChanging(string value);
    partial void OnDiemTBMONChanged();
    #endregion
		
		public Diem()
		{
			this._HocKy = default(EntityRef<HocKy>);
			this._MonHoc = default(EntityRef<MonHoc>);
			this._NamHoc = default(EntityRef<NamHoc>);
			this._HocSinh = default(EntityRef<HocSinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSo", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSo
		{
			get
			{
				return this._MaSo;
			}
			set
			{
				if ((this._MaSo != value))
				{
					this.OnMaSoChanging(value);
					this.SendPropertyChanging();
					this._MaSo = value;
					this.SendPropertyChanged("MaSo");
					this.OnMaSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="NVarChar(10)")]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNH", DbType="NVarChar(10)")]
		public string MaNH
		{
			get
			{
				return this._MaNH;
			}
			set
			{
				if ((this._MaNH != value))
				{
					if (this._NamHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNHChanging(value);
					this.SendPropertyChanging();
					this._MaNH = value;
					this.SendPropertyChanged("MaNH");
					this.OnMaNHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHK", DbType="NVarChar(10)")]
		public string MaHK
		{
			get
			{
				return this._MaHK;
			}
			set
			{
				if ((this._MaHK != value))
				{
					if (this._HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHKChanging(value);
					this.SendPropertyChanging();
					this._MaHK = value;
					this.SendPropertyChanged("MaHK");
					this.OnMaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="NVarChar(10)")]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KtMieng", DbType="NVarChar(10)")]
		public string KtMieng
		{
			get
			{
				return this._KtMieng;
			}
			set
			{
				if ((this._KtMieng != value))
				{
					this.OnKtMiengChanging(value);
					this.SendPropertyChanging();
					this._KtMieng = value;
					this.SendPropertyChanged("KtMieng");
					this.OnKtMiengChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kt15p", DbType="NVarChar(10)")]
		public string Kt15p
		{
			get
			{
				return this._Kt15p;
			}
			set
			{
				if ((this._Kt15p != value))
				{
					this.OnKt15pChanging(value);
					this.SendPropertyChanging();
					this._Kt15p = value;
					this.SendPropertyChanged("Kt15p");
					this.OnKt15pChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kt15pLan2", DbType="NVarChar(10)")]
		public string Kt15pLan2
		{
			get
			{
				return this._Kt15pLan2;
			}
			set
			{
				if ((this._Kt15pLan2 != value))
				{
					this.OnKt15pLan2Changing(value);
					this.SendPropertyChanging();
					this._Kt15pLan2 = value;
					this.SendPropertyChanged("Kt15pLan2");
					this.OnKt15pLan2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kt15pLan3", DbType="NVarChar(10)")]
		public string Kt15pLan3
		{
			get
			{
				return this._Kt15pLan3;
			}
			set
			{
				if ((this._Kt15pLan3 != value))
				{
					this.OnKt15pLan3Changing(value);
					this.SendPropertyChanging();
					this._Kt15pLan3 = value;
					this.SendPropertyChanged("Kt15pLan3");
					this.OnKt15pLan3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kt1Tiet", DbType="NVarChar(10)")]
		public string Kt1Tiet
		{
			get
			{
				return this._Kt1Tiet;
			}
			set
			{
				if ((this._Kt1Tiet != value))
				{
					this.OnKt1TietChanging(value);
					this.SendPropertyChanging();
					this._Kt1Tiet = value;
					this.SendPropertyChanged("Kt1Tiet");
					this.OnKt1TietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kt1TietLan2", DbType="NVarChar(10)")]
		public string Kt1TietLan2
		{
			get
			{
				return this._Kt1TietLan2;
			}
			set
			{
				if ((this._Kt1TietLan2 != value))
				{
					this.OnKt1TietLan2Changing(value);
					this.SendPropertyChanging();
					this._Kt1TietLan2 = value;
					this.SendPropertyChanged("Kt1TietLan2");
					this.OnKt1TietLan2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemThi", DbType="NVarChar(10)")]
		public string DiemThi
		{
			get
			{
				return this._DiemThi;
			}
			set
			{
				if ((this._DiemThi != value))
				{
					this.OnDiemThiChanging(value);
					this.SendPropertyChanging();
					this._DiemThi = value;
					this.SendPropertyChanged("DiemThi");
					this.OnDiemThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTrungBinh", DbType="NVarChar(10)")]
		public string DiemTrungBinh
		{
			get
			{
				return this._DiemTrungBinh;
			}
			set
			{
				if ((this._DiemTrungBinh != value))
				{
					this.OnDiemTrungBinhChanging(value);
					this.SendPropertyChanging();
					this._DiemTrungBinh = value;
					this.SendPropertyChanged("DiemTrungBinh");
					this.OnDiemTrungBinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTBMON", DbType="NVarChar(10)")]
		public string DiemTBMON
		{
			get
			{
				return this._DiemTBMON;
			}
			set
			{
				if ((this._DiemTBMON != value))
				{
					this.OnDiemTBMONChanging(value);
					this.SendPropertyChanging();
					this._DiemTBMON = value;
					this.SendPropertyChanged("DiemTBMON");
					this.OnDiemTBMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_Diem", Storage="_HocKy", ThisKey="MaHK", OtherKey="MaHK", IsForeignKey=true)]
		public HocKy HocKy
		{
			get
			{
				return this._HocKy.Entity;
			}
			set
			{
				HocKy previousValue = this._HocKy.Entity;
				if (((previousValue != value) 
							|| (this._HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKy.Entity = null;
						previousValue.Diems.Remove(this);
					}
					this._HocKy.Entity = value;
					if ((value != null))
					{
						value.Diems.Add(this);
						this._MaHK = value.MaHK;
					}
					else
					{
						this._MaHK = default(string);
					}
					this.SendPropertyChanged("HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_Diem", Storage="_MonHoc", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.Diems.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.Diems.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamHoc_Diem", Storage="_NamHoc", ThisKey="MaNH", OtherKey="MaNH", IsForeignKey=true)]
		public NamHoc NamHoc
		{
			get
			{
				return this._NamHoc.Entity;
			}
			set
			{
				NamHoc previousValue = this._NamHoc.Entity;
				if (((previousValue != value) 
							|| (this._NamHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NamHoc.Entity = null;
						previousValue.Diems.Remove(this);
					}
					this._NamHoc.Entity = value;
					if ((value != null))
					{
						value.Diems.Add(this);
						this._MaNH = value.MaNH;
					}
					else
					{
						this._MaNH = default(string);
					}
					this.SendPropertyChanged("NamHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_Diem", Storage="_HocSinh", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.Diems.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.Diems.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGiaoVien;
		
		private string _HoTenGiaoVien;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private string _TinhTrang;
		
		private string _Email;
		
		private string _MatKhau;
		
		private System.Nullable<bool> _IsFirstOne;
		
		private System.Nullable<bool> _IsFirstHide;
		
		private string _CCCD;
		
		private string _HinhAnh;
		
		private string _ChucVu;
		
		private EntitySet<ChucVu> _ChucVus;
		
		private EntitySet<LopHoc> _LopHocs;
		
		private EntitySet<PhanCong> _PhanCongs;
		
		private EntitySet<TietHoc> _TietHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    partial void OnHoTenGiaoVienChanging(string value);
    partial void OnHoTenGiaoVienChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnIsFirstOneChanging(System.Nullable<bool> value);
    partial void OnIsFirstOneChanged();
    partial void OnIsFirstHideChanging(System.Nullable<bool> value);
    partial void OnIsFirstHideChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    #endregion
		
		public GiaoVien()
		{
			this._ChucVus = new EntitySet<ChucVu>(new Action<ChucVu>(this.attach_ChucVus), new Action<ChucVu>(this.detach_ChucVus));
			this._LopHocs = new EntitySet<LopHoc>(new Action<LopHoc>(this.attach_LopHocs), new Action<LopHoc>(this.detach_LopHocs));
			this._PhanCongs = new EntitySet<PhanCong>(new Action<PhanCong>(this.attach_PhanCongs), new Action<PhanCong>(this.detach_PhanCongs));
			this._TietHocs = new EntitySet<TietHoc>(new Action<TietHoc>(this.attach_TietHocs), new Action<TietHoc>(this.detach_TietHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenGiaoVien", DbType="NVarChar(50)")]
		public string HoTenGiaoVien
		{
			get
			{
				return this._HoTenGiaoVien;
			}
			set
			{
				if ((this._HoTenGiaoVien != value))
				{
					this.OnHoTenGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._HoTenGiaoVien = value;
					this.SendPropertyChanged("HoTenGiaoVien");
					this.OnHoTenGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(3)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(30)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFirstOne", DbType="Bit")]
		public System.Nullable<bool> IsFirstOne
		{
			get
			{
				return this._IsFirstOne;
			}
			set
			{
				if ((this._IsFirstOne != value))
				{
					this.OnIsFirstOneChanging(value);
					this.SendPropertyChanging();
					this._IsFirstOne = value;
					this.SendPropertyChanged("IsFirstOne");
					this.OnIsFirstOneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFirstHide", DbType="Bit")]
		public System.Nullable<bool> IsFirstHide
		{
			get
			{
				return this._IsFirstHide;
			}
			set
			{
				if ((this._IsFirstHide != value))
				{
					this.OnIsFirstHideChanging(value);
					this.SendPropertyChanging();
					this._IsFirstHide = value;
					this.SendPropertyChanged("IsFirstHide");
					this.OnIsFirstHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="NVarChar(12)")]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(MAX)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(30)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_ChucVu", Storage="_ChucVus", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien")]
		public EntitySet<ChucVu> ChucVus
		{
			get
			{
				return this._ChucVus;
			}
			set
			{
				this._ChucVus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_LopHoc", Storage="_LopHocs", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien")]
		public EntitySet<LopHoc> LopHocs
		{
			get
			{
				return this._LopHocs;
			}
			set
			{
				this._LopHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_PhanCong", Storage="_PhanCongs", ThisKey="MaGiaoVien", OtherKey="MaGV")]
		public EntitySet<PhanCong> PhanCongs
		{
			get
			{
				return this._PhanCongs;
			}
			set
			{
				this._PhanCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_TietHoc", Storage="_TietHocs", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien")]
		public EntitySet<TietHoc> TietHocs
		{
			get
			{
				return this._TietHocs;
			}
			set
			{
				this._TietHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChucVus(ChucVu entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_ChucVus(ChucVu entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
		
		private void attach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
		
		private void attach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
		
		private void attach_TietHocs(TietHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_TietHocs(TietHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocKy")]
	public partial class HocKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHK;
		
		private string _TenHK;
		
		private EntitySet<Diem> _Diems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHKChanging(string value);
    partial void OnMaHKChanged();
    partial void OnTenHKChanging(string value);
    partial void OnTenHKChanged();
    #endregion
		
		public HocKy()
		{
			this._Diems = new EntitySet<Diem>(new Action<Diem>(this.attach_Diems), new Action<Diem>(this.detach_Diems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHK", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHK
		{
			get
			{
				return this._MaHK;
			}
			set
			{
				if ((this._MaHK != value))
				{
					this.OnMaHKChanging(value);
					this.SendPropertyChanging();
					this._MaHK = value;
					this.SendPropertyChanged("MaHK");
					this.OnMaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHK", DbType="NVarChar(50)")]
		public string TenHK
		{
			get
			{
				return this._TenHK;
			}
			set
			{
				if ((this._TenHK != value))
				{
					this.OnTenHKChanging(value);
					this.SendPropertyChanging();
					this._TenHK = value;
					this.SendPropertyChanged("TenHK");
					this.OnTenHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_Diem", Storage="_Diems", ThisKey="MaHK", OtherKey="MaHK")]
		public EntitySet<Diem> Diems
		{
			get
			{
				return this._Diems;
			}
			set
			{
				this._Diems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = this;
		}
		
		private void detach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocPhi")]
	public partial class HocPhi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocPhi;
		
		private string _MaHocSinh;
		
		private string _TrangThai;
		
		private System.Nullable<System.DateTime> _NgayThu;
		
		private string _SoTien;
		
		private EntityRef<HocSinh> _HocSinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocPhiChanging(string value);
    partial void OnMaHocPhiChanged();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnNgayThuChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThuChanged();
    partial void OnSoTienChanging(string value);
    partial void OnSoTienChanged();
    #endregion
		
		public HocPhi()
		{
			this._HocSinh = default(EntityRef<HocSinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocPhi", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocPhi
		{
			get
			{
				return this._MaHocPhi;
			}
			set
			{
				if ((this._MaHocPhi != value))
				{
					this.OnMaHocPhiChanging(value);
					this.SendPropertyChanging();
					this._MaHocPhi = value;
					this.SendPropertyChanged("MaHocPhi");
					this.OnMaHocPhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="NVarChar(10)")]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(30)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThu", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThu
		{
			get
			{
				return this._NgayThu;
			}
			set
			{
				if ((this._NgayThu != value))
				{
					this.OnNgayThuChanging(value);
					this.SendPropertyChanging();
					this._NgayThu = value;
					this.SendPropertyChanged("NgayThu");
					this.OnNgayThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTien", DbType="NVarChar(30)")]
		public string SoTien
		{
			get
			{
				return this._SoTien;
			}
			set
			{
				if ((this._SoTien != value))
				{
					this.OnSoTienChanging(value);
					this.SendPropertyChanging();
					this._SoTien = value;
					this.SendPropertyChanged("SoTien");
					this.OnSoTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocPhi", Storage="_HocSinh", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.HocPhis.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.HocPhis.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoiLop")]
	public partial class KhoiLop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhoi;
		
		private string _TenKhoi;
		
		private EntitySet<LopHoc> _LopHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoiChanging(string value);
    partial void OnMaKhoiChanged();
    partial void OnTenKhoiChanging(string value);
    partial void OnTenKhoiChanged();
    #endregion
		
		public KhoiLop()
		{
			this._LopHocs = new EntitySet<LopHoc>(new Action<LopHoc>(this.attach_LopHocs), new Action<LopHoc>(this.detach_LopHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoi", DbType="NVarChar(50)")]
		public string TenKhoi
		{
			get
			{
				return this._TenKhoi;
			}
			set
			{
				if ((this._TenKhoi != value))
				{
					this.OnTenKhoiChanging(value);
					this.SendPropertyChanging();
					this._TenKhoi = value;
					this.SendPropertyChanged("TenKhoi");
					this.OnTenKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoiLop_LopHoc", Storage="_LopHocs", ThisKey="MaKhoi", OtherKey="MaKhoi")]
		public EntitySet<LopHoc> LopHocs
		{
			get
			{
				return this._LopHocs;
			}
			set
			{
				this._LopHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.KhoiLop = this;
		}
		
		private void detach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.KhoiLop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc")]
	public partial class LopHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _MaKhoi;
		
		private string _MaGiaoVien;
		
		private string _TenLop;
		
		private string _GhiChu;
		
		private EntitySet<TietHoc> _TietHocs;
		
		private EntitySet<HocSinh> _HocSinhs;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<KhoiLop> _KhoiLop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaKhoiChanging(string value);
    partial void OnMaKhoiChanged();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public LopHoc()
		{
			this._TietHocs = new EntitySet<TietHoc>(new Action<TietHoc>(this.attach_TietHocs), new Action<TietHoc>(this.detach_TietHocs));
			this._HocSinhs = new EntitySet<HocSinh>(new Action<HocSinh>(this.attach_HocSinhs), new Action<HocSinh>(this.detach_HocSinhs));
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._KhoiLop = default(EntityRef<KhoiLop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="NVarChar(10)")]
		public string MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._KhoiLop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="NVarChar(10)")]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(50)")]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_TietHoc", Storage="_TietHocs", ThisKey="MaLop", OtherKey="MaLopHoc")]
		public EntitySet<TietHoc> TietHocs
		{
			get
			{
				return this._TietHocs;
			}
			set
			{
				this._TietHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_HocSinh", Storage="_HocSinhs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<HocSinh> HocSinhs
		{
			get
			{
				return this._HocSinhs;
			}
			set
			{
				this._HocSinhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_LopHoc", Storage="_GiaoVien", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.LopHocs.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.LopHocs.Add(this);
						this._MaGiaoVien = value.MaGiaoVien;
					}
					else
					{
						this._MaGiaoVien = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoiLop_LopHoc", Storage="_KhoiLop", ThisKey="MaKhoi", OtherKey="MaKhoi", IsForeignKey=true)]
		public KhoiLop KhoiLop
		{
			get
			{
				return this._KhoiLop.Entity;
			}
			set
			{
				KhoiLop previousValue = this._KhoiLop.Entity;
				if (((previousValue != value) 
							|| (this._KhoiLop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoiLop.Entity = null;
						previousValue.LopHocs.Remove(this);
					}
					this._KhoiLop.Entity = value;
					if ((value != null))
					{
						value.LopHocs.Add(this);
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaKhoi = default(string);
					}
					this.SendPropertyChanged("KhoiLop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TietHocs(TietHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = this;
		}
		
		private void detach_TietHocs(TietHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = null;
		}
		
		private void attach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = this;
		}
		
		private void detach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMon;
		
		private string _TenMonHoc;
		
		private EntitySet<Diem> _Diems;
		
		private EntitySet<PhanCong> _PhanCongs;
		
		private EntitySet<TietHoc> _TietHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnTenMonHocChanging(string value);
    partial void OnTenMonHocChanged();
    #endregion
		
		public MonHoc()
		{
			this._Diems = new EntitySet<Diem>(new Action<Diem>(this.attach_Diems), new Action<Diem>(this.detach_Diems));
			this._PhanCongs = new EntitySet<PhanCong>(new Action<PhanCong>(this.attach_PhanCongs), new Action<PhanCong>(this.detach_PhanCongs));
			this._TietHocs = new EntitySet<TietHoc>(new Action<TietHoc>(this.attach_TietHocs), new Action<TietHoc>(this.detach_TietHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMonHoc", DbType="NVarChar(50)")]
		public string TenMonHoc
		{
			get
			{
				return this._TenMonHoc;
			}
			set
			{
				if ((this._TenMonHoc != value))
				{
					this.OnTenMonHocChanging(value);
					this.SendPropertyChanging();
					this._TenMonHoc = value;
					this.SendPropertyChanged("TenMonHoc");
					this.OnTenMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_Diem", Storage="_Diems", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<Diem> Diems
		{
			get
			{
				return this._Diems;
			}
			set
			{
				this._Diems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_PhanCong", Storage="_PhanCongs", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<PhanCong> PhanCongs
		{
			get
			{
				return this._PhanCongs;
			}
			set
			{
				this._PhanCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_TietHoc", Storage="_TietHocs", ThisKey="MaMon", OtherKey="MaMonHoc")]
		public EntitySet<TietHoc> TietHocs
		{
			get
			{
				return this._TietHocs;
			}
			set
			{
				this._TietHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_TietHocs(TietHoc entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_TietHocs(TietHoc entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NamHoc")]
	public partial class NamHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNH;
		
		private string _NamHoc1;
		
		private EntitySet<Diem> _Diems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNHChanging(string value);
    partial void OnMaNHChanged();
    partial void OnNamHoc1Changing(string value);
    partial void OnNamHoc1Changed();
    #endregion
		
		public NamHoc()
		{
			this._Diems = new EntitySet<Diem>(new Action<Diem>(this.attach_Diems), new Action<Diem>(this.detach_Diems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNH", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNH
		{
			get
			{
				return this._MaNH;
			}
			set
			{
				if ((this._MaNH != value))
				{
					this.OnMaNHChanging(value);
					this.SendPropertyChanging();
					this._MaNH = value;
					this.SendPropertyChanged("MaNH");
					this.OnMaNHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="NamHoc", Storage="_NamHoc1", DbType="NVarChar(50)")]
		public string NamHoc1
		{
			get
			{
				return this._NamHoc1;
			}
			set
			{
				if ((this._NamHoc1 != value))
				{
					this.OnNamHoc1Changing(value);
					this.SendPropertyChanging();
					this._NamHoc1 = value;
					this.SendPropertyChanged("NamHoc1");
					this.OnNamHoc1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamHoc_Diem", Storage="_Diems", ThisKey="MaNH", OtherKey="MaNH")]
		public EntitySet<Diem> Diems
		{
			get
			{
				return this._Diems;
			}
			set
			{
				this._Diems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.NamHoc = this;
		}
		
		private void detach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.NamHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanCong")]
	public partial class PhanCong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGV;
		
		private string _MaMon;
		
		private System.Nullable<System.DateTime> _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    #endregion
		
		public PhanCong()
		{
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_PhanCong", Storage="_GiaoVien", ThisKey="MaGV", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.PhanCongs.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.PhanCongs.Add(this);
						this._MaGV = value.MaGiaoVien;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_PhanCong", Storage="_MonHoc", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.PhanCongs.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.PhanCongs.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private System.Nullable<bool> _DaNghi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDaNghiChanging(System.Nullable<bool> value);
    partial void OnDaNghiChanged();
    #endregion
		
		public NhanVien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaNghi", DbType="Bit")]
		public System.Nullable<bool> DaNghi
		{
			get
			{
				return this._DaNghi;
			}
			set
			{
				if ((this._DaNghi != value))
				{
					this.OnDaNghiChanging(value);
					this.SendPropertyChanging();
					this._DaNghi = value;
					this.SendPropertyChanged("DaNghi");
					this.OnDaNghiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongHoc")]
	public partial class PhongHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhongHoc;
		
		private string _TenPhongHoc;
		
		private System.Nullable<int> _SucChua;
		
		private string _TangLau;
		
		private EntitySet<TietHoc> _TietHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongHocChanging(string value);
    partial void OnMaPhongHocChanged();
    partial void OnTenPhongHocChanging(string value);
    partial void OnTenPhongHocChanged();
    partial void OnSucChuaChanging(System.Nullable<int> value);
    partial void OnSucChuaChanged();
    partial void OnTangLauChanging(string value);
    partial void OnTangLauChanged();
    #endregion
		
		public PhongHoc()
		{
			this._TietHocs = new EntitySet<TietHoc>(new Action<TietHoc>(this.attach_TietHocs), new Action<TietHoc>(this.detach_TietHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhongHoc", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhongHoc
		{
			get
			{
				return this._MaPhongHoc;
			}
			set
			{
				if ((this._MaPhongHoc != value))
				{
					this.OnMaPhongHocChanging(value);
					this.SendPropertyChanging();
					this._MaPhongHoc = value;
					this.SendPropertyChanged("MaPhongHoc");
					this.OnMaPhongHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhongHoc", DbType="NVarChar(50)")]
		public string TenPhongHoc
		{
			get
			{
				return this._TenPhongHoc;
			}
			set
			{
				if ((this._TenPhongHoc != value))
				{
					this.OnTenPhongHocChanging(value);
					this.SendPropertyChanging();
					this._TenPhongHoc = value;
					this.SendPropertyChanged("TenPhongHoc");
					this.OnTenPhongHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SucChua", DbType="Int")]
		public System.Nullable<int> SucChua
		{
			get
			{
				return this._SucChua;
			}
			set
			{
				if ((this._SucChua != value))
				{
					this.OnSucChuaChanging(value);
					this.SendPropertyChanging();
					this._SucChua = value;
					this.SendPropertyChanged("SucChua");
					this.OnSucChuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TangLau", DbType="NVarChar(10)")]
		public string TangLau
		{
			get
			{
				return this._TangLau;
			}
			set
			{
				if ((this._TangLau != value))
				{
					this.OnTangLauChanging(value);
					this.SendPropertyChanging();
					this._TangLau = value;
					this.SendPropertyChanged("TangLau");
					this.OnTangLauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongHoc_TietHoc", Storage="_TietHocs", ThisKey="MaPhongHoc", OtherKey="MaPhongHoc")]
		public EntitySet<TietHoc> TietHocs
		{
			get
			{
				return this._TietHocs;
			}
			set
			{
				this._TietHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TietHocs(TietHoc entity)
		{
			this.SendPropertyChanging();
			entity.PhongHoc = this;
		}
		
		private void detach_TietHocs(TietHoc entity)
		{
			this.SendPropertyChanging();
			entity.PhongHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TietHoc")]
	public partial class TietHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTietHoc;
		
		private string _MaMonHoc;
		
		private string _MaLopHoc;
		
		private string _MaGiaoVien;
		
		private string _MaPhongHoc;
		
		private string _Thu;
		
		private System.Nullable<int> _Tiet;
		
		private System.Nullable<int> _SoTiet;
		
		private System.Nullable<System.TimeSpan> _GioBatDau;
		
		private System.Nullable<System.TimeSpan> _GioKetThuc;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<LopHoc> _LopHoc;
		
		private EntityRef<MonHoc> _MonHoc;
		
		private EntityRef<PhongHoc> _PhongHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTietHocChanging(string value);
    partial void OnMaTietHocChanged();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnMaLopHocChanging(string value);
    partial void OnMaLopHocChanged();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    partial void OnMaPhongHocChanging(string value);
    partial void OnMaPhongHocChanged();
    partial void OnThuChanging(string value);
    partial void OnThuChanged();
    partial void OnTietChanging(System.Nullable<int> value);
    partial void OnTietChanged();
    partial void OnSoTietChanging(System.Nullable<int> value);
    partial void OnSoTietChanged();
    partial void OnGioBatDauChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGioBatDauChanged();
    partial void OnGioKetThucChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGioKetThucChanged();
    #endregion
		
		public TietHoc()
		{
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._LopHoc = default(EntityRef<LopHoc>);
			this._MonHoc = default(EntityRef<MonHoc>);
			this._PhongHoc = default(EntityRef<PhongHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTietHoc", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTietHoc
		{
			get
			{
				return this._MaTietHoc;
			}
			set
			{
				if ((this._MaTietHoc != value))
				{
					this.OnMaTietHocChanging(value);
					this.SendPropertyChanging();
					this._MaTietHoc = value;
					this.SendPropertyChanged("MaTietHoc");
					this.OnMaTietHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="NVarChar(10)")]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", DbType="NVarChar(10)")]
		public string MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					if (this._LopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="NVarChar(10)")]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhongHoc", DbType="NVarChar(10)")]
		public string MaPhongHoc
		{
			get
			{
				return this._MaPhongHoc;
			}
			set
			{
				if ((this._MaPhongHoc != value))
				{
					if (this._PhongHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongHocChanging(value);
					this.SendPropertyChanging();
					this._MaPhongHoc = value;
					this.SendPropertyChanged("MaPhongHoc");
					this.OnMaPhongHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thu", DbType="NVarChar(10)")]
		public string Thu
		{
			get
			{
				return this._Thu;
			}
			set
			{
				if ((this._Thu != value))
				{
					this.OnThuChanging(value);
					this.SendPropertyChanging();
					this._Thu = value;
					this.SendPropertyChanged("Thu");
					this.OnThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tiet", DbType="Int")]
		public System.Nullable<int> Tiet
		{
			get
			{
				return this._Tiet;
			}
			set
			{
				if ((this._Tiet != value))
				{
					this.OnTietChanging(value);
					this.SendPropertyChanging();
					this._Tiet = value;
					this.SendPropertyChanged("Tiet");
					this.OnTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTiet", DbType="Int")]
		public System.Nullable<int> SoTiet
		{
			get
			{
				return this._SoTiet;
			}
			set
			{
				if ((this._SoTiet != value))
				{
					this.OnSoTietChanging(value);
					this.SendPropertyChanging();
					this._SoTiet = value;
					this.SendPropertyChanged("SoTiet");
					this.OnSoTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioBatDau", DbType="Time")]
		public System.Nullable<System.TimeSpan> GioBatDau
		{
			get
			{
				return this._GioBatDau;
			}
			set
			{
				if ((this._GioBatDau != value))
				{
					this.OnGioBatDauChanging(value);
					this.SendPropertyChanging();
					this._GioBatDau = value;
					this.SendPropertyChanged("GioBatDau");
					this.OnGioBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioKetThuc", DbType="Time")]
		public System.Nullable<System.TimeSpan> GioKetThuc
		{
			get
			{
				return this._GioKetThuc;
			}
			set
			{
				if ((this._GioKetThuc != value))
				{
					this.OnGioKetThucChanging(value);
					this.SendPropertyChanging();
					this._GioKetThuc = value;
					this.SendPropertyChanged("GioKetThuc");
					this.OnGioKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_TietHoc", Storage="_GiaoVien", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.TietHocs.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.TietHocs.Add(this);
						this._MaGiaoVien = value.MaGiaoVien;
					}
					else
					{
						this._MaGiaoVien = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_TietHoc", Storage="_LopHoc", ThisKey="MaLopHoc", OtherKey="MaLop", IsForeignKey=true)]
		public LopHoc LopHoc
		{
			get
			{
				return this._LopHoc.Entity;
			}
			set
			{
				LopHoc previousValue = this._LopHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc.Entity = null;
						previousValue.TietHocs.Remove(this);
					}
					this._LopHoc.Entity = value;
					if ((value != null))
					{
						value.TietHocs.Add(this);
						this._MaLopHoc = value.MaLop;
					}
					else
					{
						this._MaLopHoc = default(string);
					}
					this.SendPropertyChanged("LopHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_TietHoc", Storage="_MonHoc", ThisKey="MaMonHoc", OtherKey="MaMon", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.TietHocs.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.TietHocs.Add(this);
						this._MaMonHoc = value.MaMon;
					}
					else
					{
						this._MaMonHoc = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongHoc_TietHoc", Storage="_PhongHoc", ThisKey="MaPhongHoc", OtherKey="MaPhongHoc", IsForeignKey=true)]
		public PhongHoc PhongHoc
		{
			get
			{
				return this._PhongHoc.Entity;
			}
			set
			{
				PhongHoc previousValue = this._PhongHoc.Entity;
				if (((previousValue != value) 
							|| (this._PhongHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongHoc.Entity = null;
						previousValue.TietHocs.Remove(this);
					}
					this._PhongHoc.Entity = value;
					if ((value != null))
					{
						value.TietHocs.Add(this);
						this._MaPhongHoc = value.MaPhongHoc;
					}
					else
					{
						this._MaPhongHoc = default(string);
					}
					this.SendPropertyChanged("PhongHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh")]
	public partial class HocSinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocSinh;
		
		private string _MaLop;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private string _SDT_HS;
		
		private string _SDT_PHHS;
		
		private string _ChaHS;
		
		private string _MeHS;
		
		private string _HinhAnh;
		
		private string _TinhTrang;
		
		private System.Nullable<bool> _IsHidden;
		
		private EntitySet<BaoHiem> _BaoHiems;
		
		private EntitySet<Diem> _Diems;
		
		private EntitySet<HocPhi> _HocPhis;
		
		private EntityRef<LopHoc> _LopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDT_HSChanging(string value);
    partial void OnSDT_HSChanged();
    partial void OnSDT_PHHSChanging(string value);
    partial void OnSDT_PHHSChanged();
    partial void OnChaHSChanging(string value);
    partial void OnChaHSChanged();
    partial void OnMeHSChanging(string value);
    partial void OnMeHSChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnIsHiddenChanging(System.Nullable<bool> value);
    partial void OnIsHiddenChanged();
    #endregion
		
		public HocSinh()
		{
			this._BaoHiems = new EntitySet<BaoHiem>(new Action<BaoHiem>(this.attach_BaoHiems), new Action<BaoHiem>(this.detach_BaoHiems));
			this._Diems = new EntitySet<Diem>(new Action<Diem>(this.attach_Diems), new Action<Diem>(this.detach_Diems));
			this._HocPhis = new EntitySet<HocPhi>(new Action<HocPhi>(this.attach_HocPhis), new Action<HocPhi>(this.detach_HocPhis));
			this._LopHoc = default(EntityRef<LopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="NVarChar(10)")]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(3)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_HS", DbType="NVarChar(15)")]
		public string SDT_HS
		{
			get
			{
				return this._SDT_HS;
			}
			set
			{
				if ((this._SDT_HS != value))
				{
					this.OnSDT_HSChanging(value);
					this.SendPropertyChanging();
					this._SDT_HS = value;
					this.SendPropertyChanged("SDT_HS");
					this.OnSDT_HSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_PHHS", DbType="NVarChar(15)")]
		public string SDT_PHHS
		{
			get
			{
				return this._SDT_PHHS;
			}
			set
			{
				if ((this._SDT_PHHS != value))
				{
					this.OnSDT_PHHSChanging(value);
					this.SendPropertyChanging();
					this._SDT_PHHS = value;
					this.SendPropertyChanged("SDT_PHHS");
					this.OnSDT_PHHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChaHS", DbType="NVarChar(50)")]
		public string ChaHS
		{
			get
			{
				return this._ChaHS;
			}
			set
			{
				if ((this._ChaHS != value))
				{
					this.OnChaHSChanging(value);
					this.SendPropertyChanging();
					this._ChaHS = value;
					this.SendPropertyChanged("ChaHS");
					this.OnChaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeHS", DbType="NVarChar(50)")]
		public string MeHS
		{
			get
			{
				return this._MeHS;
			}
			set
			{
				if ((this._MeHS != value))
				{
					this.OnMeHSChanging(value);
					this.SendPropertyChanging();
					this._MeHS = value;
					this.SendPropertyChanged("MeHS");
					this.OnMeHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(MAX)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(50)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit")]
		public System.Nullable<bool> IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this.OnIsHiddenChanging(value);
					this.SendPropertyChanging();
					this._IsHidden = value;
					this.SendPropertyChanged("IsHidden");
					this.OnIsHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_BaoHiem", Storage="_BaoHiems", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<BaoHiem> BaoHiems
		{
			get
			{
				return this._BaoHiems;
			}
			set
			{
				this._BaoHiems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_Diem", Storage="_Diems", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<Diem> Diems
		{
			get
			{
				return this._Diems;
			}
			set
			{
				this._Diems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocPhi", Storage="_HocPhis", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<HocPhi> HocPhis
		{
			get
			{
				return this._HocPhis;
			}
			set
			{
				this._HocPhis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_HocSinh", Storage="_LopHoc", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LopHoc LopHoc
		{
			get
			{
				return this._LopHoc.Entity;
			}
			set
			{
				LopHoc previousValue = this._LopHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc.Entity = null;
						previousValue.HocSinhs.Remove(this);
					}
					this._LopHoc.Entity = value;
					if ((value != null))
					{
						value.HocSinhs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaoHiems(BaoHiem entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_BaoHiems(BaoHiem entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
		
		private void attach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
		
		private void attach_HocPhis(HocPhi entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_HocPhis(HocPhi entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
	}
}
#pragma warning restore 1591
